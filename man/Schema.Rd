% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/40-Process-class.R
\docType{class}
\name{SchemaList}
\alias{InputSchema}
\alias{InputSchema-class}
\alias{OutputSchema}
\alias{OutputSchema-class}
\alias{Schema}
\alias{Schema-class}
\alias{SchemaDef}
\alias{SchemaDef-class}
\alias{SchemaDefList}
\alias{SchemaDefList-class}
\alias{SchemaList}
\alias{SchemaList-class}
\title{SchemaList}
\usage{
SchemaList(...)

SchemaDefList(...)
}
\arguments{
\item{\dots}{element or list of the element.}
}
\description{
SchemaList

A schema defines a parameter type.

SchemaDef Class

SchemaDefList

InputSchema Class

OutputSchema Class
}
\section{Fields}{

\describe{
\item{\code{type}}{(ANY) The data type of this parameter.}

\item{\code{fields}}{[SchemaList] When type is record, defines the fields of the
record.}

\item{\code{symbols}}{[character] When type is enum, defines the set of valid symbols.}

\item{\code{items}}{[ANY] When type is array, defines the type of the array
elements.}

\item{\code{values}}{[ANY] When type is map, defines the value type for the
key/value pairs.}

\item{\code{inputBinding}}{[Binding] Describes how to handle a value in
the input object convert it into a concrete form for execution,
such as command line parameters.}
}}
\examples{
Schema(fields = SchemaList(SchemaDef(name = "schema")))
}

